-- Haskell Playground 1.0
-- length is strict in the spine but not the values
-- using length on it would force evaluation of the entire spine without accompanying strictness in the values
let x = [1, undefined, 3]
length x

-- length will throw an error on a bottom value if part of the spine itself is bottom:
let x = [1] ++ undefined ++ [3]
x
length x


mySum [1..5]

--1 ^ undefined
[x^y | x <- [1..5], y <- [2, undefined]]

take 1 $ [x^y | x <- [1..5], y <- [2, undefined]]

sum [1, undefined, 3]

length [1, 2, undefined]

length $ [1, 2, 3] ++ undefined

take 1 $ filter even [1, 2, 3, undefined]

take 1 $ filter even [1, 3, undefined]

take 1 $ filter odd [1, 3, undefined]
take 2 $ filter odd [1, 3, undefined]
take 3 $ filter odd [1, 3, undefined]
