-- Haskell Playground 1.0
zip [1,2,3] [4,5,6]
myZip [1,2,3] [4,5,6] == zip [1,2,3] [4,5,6]
zip [1,2] [4,5,6]
myZip [1,2] [4,5,6] == zip [1,2] [4,5,6]

zip [] [1..1000000000000000000]
myZip [] [1..1000000000000000000] == zip [] [1..1000000000000000000]
zip ['a'] [1..1000000000000000000]
myZip ['a'] [1..1000000000000000000] == zip ['a'] [1..1000000000000000000]
zip [1..100] ['a'..'c']
myZip [1..100] ['a'..'c'] == zip [1..100] ['a'..'c']

unzip $ zip [1,2,3] [4,5,6]
fst $ unzip $ zip [1,2,3] [4,5,6]
snd $ unzip $ zip [1,2,3] [4,5,6]

snd $ unzip $ zip [1,2] [4,5,6]

zipWith (+) [1, 2, 3] [10, 11, 12]
myZipWith (+) [1, 2, 3] [10, 11, 12] == zipWith (+) [1, 2, 3] [10, 11, 12]
zipWith (*) [1, 2, 3] [10, 11, 12]
myZipWith (*) [1, 2, 3] [10, 11, 12] == zipWith (*) [1, 2, 3] [10, 11, 12]
zipWith (==) ['a'..'f'] ['a'..'m']
myZipWith (==) ['a'..'f'] ['a'..'m'] == zipWith (==) ['a'..'f'] ['a'..'m']
zipWith max [10, 5, 34, 9] [6, 8, 12, 7]
myZipWith max [10, 5, 34, 9] [6, 8, 12, 7] == zipWith max [10, 5, 34, 9] [6, 8, 12, 7]
