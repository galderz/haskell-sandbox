-- Haskell Playground 1.0
(*)
-- 1 * (2 * (3 * 1) ...
foldr (*) 1 [1..5]

-- (((1 * 1) * 2) * 3 ...)
foldl (*) 1 [1..5]

-- (3 * (2 * (1 * 1)) ...)
foldl (flip (*)) 1 [1..5]


-- 1 ^ (2 ^ (3 ^ 1)
foldr (^) 1 [1..3]

-- (((1 ^ 1) ^ 2) ^ 3 ...)
foldl (^) 1 [1..5]

-- (3 ^ (2 ^ (1 ^ 1)))
foldl (flip (^)) 1 [1..3]


-- Fix errors:


-- foldr (++) ["woot", "WOOT", "woot"]
foldr (++) "" ["woot", "WOOT", "woot"]

-- foldr max [] "fear is the little death"
max 
max 'a' 'b'
foldr max ' ' "fear is the little death"

and
and [True, False]
and []
-- False and (True and True)
-- foldr and True [False, True]
-- False && (True && True)
foldr (&&) True [False, True]

foldr (||) True [False, True]
foldl (||) True [False, True]
foldl (flip (||)) True [False, True]
foldr (flip (||)) True [False, True]

show
show 1
(++)
(++) "" (show 1)
(++) "" $ show 1
(show 1) ++ ""
--((++) . show) "" 1
--map show [1]
-- ((++) . show) "" 1)
--foldl ((++) . show) "" [1..5]
-- foldl (++) "" (map show [1..5])
-- foldl ((++) . show) "" [1..5]
-- ((++) . show) "" 1
((++) . show) 1 ""
-- (++) (show 1) ""
foldr ((++) . show) "" [1..5]

const 1 'a'
const 'a' 1
foldr const 0 [1..5]
--foldr const 'a' [1..5]
foldr (flip const) 'a' [1..5]
foldl const 'a' [1..5]

-- foldr const 0 "tacos"
foldr (flip const) 0 "tacos"
foldl const 0 "tacos"

foldl
-- foldl (flip const) 0 "burritos"
foldl const 0 "burritos"

--foldl (flip const) 'z' [1..5]
foldl const 'z' [1..5]

